"""init schema

Revision ID: c42f9145e0e4
Revises: 
Create Date: 2025-09-10 16:36:30.930665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c42f9145e0e4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact_cache',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('phone_e164', sa.String(length=20), nullable=False),
    sa.Column('rn_contact_key', sa.String(length=64), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'phone_e164', name='uq_contactcache_tenant_phone')
    )
    op.create_index(op.f('ix_contact_cache_phone_e164'), 'contact_cache', ['phone_e164'], unique=False)
    op.create_index(op.f('ix_contact_cache_rn_contact_key'), 'contact_cache', ['rn_contact_key'], unique=False)
    op.create_index(op.f('ix_contact_cache_tenant_id'), 'contact_cache', ['tenant_id'], unique=False)
    op.drop_table('tenants')
    op.add_column('dialer_queue', sa.Column('call_id', sa.String(length=128), nullable=False))
    op.add_column('dialer_queue', sa.Column('direction', sa.String(length=16), nullable=False))
    op.add_column('dialer_queue', sa.Column('target_phone', sa.String(length=20), nullable=False))
    op.add_column('dialer_queue', sa.Column('next_attempt_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
    op.add_column('dialer_queue', sa.Column('payload', sa.JSON(), nullable=False))
    op.add_column('dialer_queue', sa.Column('last_error', sa.Text(), nullable=True))
    op.alter_column('dialer_queue', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('queued', 'processing', 'done', 'dead', name='queuestatus'),
               existing_nullable=False)
    op.drop_index(op.f('idx_queue_obj'), table_name='dialer_queue')
    op.drop_index(op.f('idx_queue_pending'), table_name='dialer_queue')
    op.drop_constraint(op.f('uq_queue_tenant_campaign_key'), 'dialer_queue', type_='unique')
    op.create_index(op.f('ix_dialer_queue_call_id'), 'dialer_queue', ['call_id'], unique=False)
    op.create_index(op.f('ix_dialer_queue_tenant_id'), 'dialer_queue', ['tenant_id'], unique=False)
    op.create_unique_constraint('uq_queue_tenant_callid', 'dialer_queue', ['tenant_id', 'call_id'])
    op.drop_constraint(None, 'dialer_queue', type_='foreignkey')
    op.drop_column('dialer_queue', 'object_key')
    op.drop_column('dialer_queue', 'email')
    op.drop_column('dialer_queue', 'company')
    op.drop_column('dialer_queue', 'phone_e164')
    op.drop_column('dialer_queue', 'locked_by')
    op.drop_column('dialer_queue', 'last_result')
    op.drop_column('dialer_queue', 'name_first')
    op.drop_column('dialer_queue', 'last_called_at')
    op.drop_column('dialer_queue', 'campaign')
    op.drop_column('dialer_queue', 'name_last')
    op.add_column('dispo_map', sa.Column('kixie_disposition', sa.String(length=100), nullable=False))
    op.add_column('dispo_map', sa.Column('rn_status_key', sa.Integer(), nullable=False))
    op.add_column('dispo_map', sa.Column('rn_event_type_key', sa.Integer(), nullable=False))
    op.add_column('dispo_map', sa.Column('auto_followup', sa.Boolean(), nullable=False))
    op.add_column('dispo_map', sa.Column('followup_minutes', sa.Integer(), nullable=True))
    op.add_column('dispo_map', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
    op.add_column('dispo_map', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
    op.create_index(op.f('ix_dispo_map_kixie_disposition'), 'dispo_map', ['kixie_disposition'], unique=False)
    op.create_index(op.f('ix_dispo_map_tenant_id'), 'dispo_map', ['tenant_id'], unique=False)
    op.create_unique_constraint('uq_dispo_tenant_kixie', 'dispo_map', ['tenant_id', 'kixie_disposition'])
    op.drop_constraint(None, 'dispo_map', type_='foreignkey')
    op.drop_column('dispo_map', 'kixie_dispo')
    op.drop_column('dispo_map', 'create_task_bool')
    op.drop_column('dispo_map', 'task_due_days')
    op.drop_column('dispo_map', 'rn_history_status')
    op.add_column('event_log', sa.Column('level', sa.String(length=16), nullable=False))
    op.add_column('event_log', sa.Column('source', sa.String(length=64), nullable=False))
    op.add_column('event_log', sa.Column('correlation_id', sa.String(length=128), nullable=True))
    op.add_column('event_log', sa.Column('message', sa.String(length=512), nullable=True))
    op.add_column('event_log', sa.Column('data', sa.JSON(), nullable=True))
    op.alter_column('event_log', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.create_index(op.f('ix_event_log_correlation_id'), 'event_log', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_event_log_event_type'), 'event_log', ['event_type'], unique=False)
    op.create_index(op.f('ix_event_log_tenant_id'), 'event_log', ['tenant_id'], unique=False)
    op.create_index('ix_eventlog_tenant_event_created', 'event_log', ['tenant_id', 'event_type', 'created_at'], unique=False)
    op.drop_column('event_log', 'idem_key')
    op.drop_column('event_log', 'payload_json')
    op.drop_column('event_log', 'error')
    op.drop_column('event_log', 'callid')
    op.drop_column('event_log', 'status')
    op.add_column('user_map', sa.Column('agent_email', sa.String(length=255), nullable=False))
    op.add_column('user_map', sa.Column('rn_user_key', sa.String(length=64), nullable=False))
    op.add_column('user_map', sa.Column('rn_team_key', sa.String(length=64), nullable=True))
    op.add_column('user_map', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
    op.add_column('user_map', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
    op.create_index(op.f('ix_user_map_agent_email'), 'user_map', ['agent_email'], unique=False)
    op.create_index(op.f('ix_user_map_rn_user_key'), 'user_map', ['rn_user_key'], unique=False)
    op.create_index(op.f('ix_user_map_tenant_id'), 'user_map', ['tenant_id'], unique=False)
    op.create_unique_constraint('uq_user_map_tenant_agent', 'user_map', ['tenant_id', 'agent_email'])
    op.drop_constraint(None, 'user_map', type_='foreignkey')
    op.drop_column('user_map', 'rn_user_id')
    op.drop_column('user_map', 'kixie_email')
    op.drop_column('user_map', 'kixie_user_id')
    op.drop_column('user_map', 'rn_email')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_map', sa.Column('rn_email', sa.VARCHAR(), nullable=True))
    op.add_column('user_map', sa.Column('kixie_user_id', sa.VARCHAR(), nullable=True))
    op.add_column('user_map', sa.Column('kixie_email', sa.VARCHAR(), nullable=True))
    op.add_column('user_map', sa.Column('rn_user_id', sa.VARCHAR(), nullable=True))
    op.create_foreign_key(None, 'user_map', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint('uq_user_map_tenant_agent', 'user_map', type_='unique')
    op.drop_index(op.f('ix_user_map_tenant_id'), table_name='user_map')
    op.drop_index(op.f('ix_user_map_rn_user_key'), table_name='user_map')
    op.drop_index(op.f('ix_user_map_agent_email'), table_name='user_map')
    op.drop_column('user_map', 'updated_at')
    op.drop_column('user_map', 'created_at')
    op.drop_column('user_map', 'rn_team_key')
    op.drop_column('user_map', 'rn_user_key')
    op.drop_column('user_map', 'agent_email')
    op.add_column('event_log', sa.Column('status', sa.VARCHAR(), nullable=True))
    op.add_column('event_log', sa.Column('callid', sa.VARCHAR(), nullable=True))
    op.add_column('event_log', sa.Column('error', sa.TEXT(), nullable=True))
    op.add_column('event_log', sa.Column('payload_json', sa.TEXT(), nullable=False))
    op.add_column('event_log', sa.Column('idem_key', sa.VARCHAR(), nullable=False))
    op.drop_index('ix_eventlog_tenant_event_created', table_name='event_log')
    op.drop_index(op.f('ix_event_log_tenant_id'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_event_type'), table_name='event_log')
    op.drop_index(op.f('ix_event_log_correlation_id'), table_name='event_log')
    op.alter_column('event_log', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_column('event_log', 'data')
    op.drop_column('event_log', 'message')
    op.drop_column('event_log', 'correlation_id')
    op.drop_column('event_log', 'source')
    op.drop_column('event_log', 'level')
    op.add_column('dispo_map', sa.Column('rn_history_status', sa.VARCHAR(), nullable=True))
    op.add_column('dispo_map', sa.Column('task_due_days', sa.INTEGER(), nullable=True))
    op.add_column('dispo_map', sa.Column('create_task_bool', sa.BOOLEAN(), nullable=True))
    op.add_column('dispo_map', sa.Column('kixie_dispo', sa.VARCHAR(), nullable=False))
    op.create_foreign_key(None, 'dispo_map', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint('uq_dispo_tenant_kixie', 'dispo_map', type_='unique')
    op.drop_index(op.f('ix_dispo_map_tenant_id'), table_name='dispo_map')
    op.drop_index(op.f('ix_dispo_map_kixie_disposition'), table_name='dispo_map')
    op.drop_column('dispo_map', 'updated_at')
    op.drop_column('dispo_map', 'created_at')
    op.drop_column('dispo_map', 'followup_minutes')
    op.drop_column('dispo_map', 'auto_followup')
    op.drop_column('dispo_map', 'rn_event_type_key')
    op.drop_column('dispo_map', 'rn_status_key')
    op.drop_column('dispo_map', 'kixie_disposition')
    op.add_column('dialer_queue', sa.Column('name_last', sa.VARCHAR(length=120), nullable=True))
    op.add_column('dialer_queue', sa.Column('campaign', sa.VARCHAR(length=120), nullable=True))
    op.add_column('dialer_queue', sa.Column('last_called_at', sa.DATETIME(), nullable=True))
    op.add_column('dialer_queue', sa.Column('name_first', sa.VARCHAR(length=120), nullable=True))
    op.add_column('dialer_queue', sa.Column('last_result', sa.VARCHAR(length=400), nullable=True))
    op.add_column('dialer_queue', sa.Column('locked_by', sa.VARCHAR(length=200), nullable=True))
    op.add_column('dialer_queue', sa.Column('phone_e164', sa.VARCHAR(length=40), nullable=False))
    op.add_column('dialer_queue', sa.Column('company', sa.VARCHAR(length=200), nullable=True))
    op.add_column('dialer_queue', sa.Column('email', sa.VARCHAR(length=200), nullable=True))
    op.add_column('dialer_queue', sa.Column('object_key', sa.VARCHAR(length=64), nullable=False))
    op.create_foreign_key(None, 'dialer_queue', 'tenants', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('uq_queue_tenant_callid', 'dialer_queue', type_='unique')
    op.drop_index(op.f('ix_dialer_queue_tenant_id'), table_name='dialer_queue')
    op.drop_index(op.f('ix_dialer_queue_call_id'), table_name='dialer_queue')
    op.create_unique_constraint(op.f('uq_queue_tenant_campaign_key'), 'dialer_queue', ['tenant_id', 'campaign', 'object_key'])
    op.create_index(op.f('idx_queue_pending'), 'dialer_queue', ['tenant_id', 'campaign', 'status'], unique=False)
    op.create_index(op.f('idx_queue_obj'), 'dialer_queue', ['tenant_id', 'object_key'], unique=False)
    op.alter_column('dialer_queue', 'status',
               existing_type=sa.Enum('queued', 'processing', 'done', 'dead', name='queuestatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_column('dialer_queue', 'last_error')
    op.drop_column('dialer_queue', 'payload')
    op.drop_column('dialer_queue', 'next_attempt_at')
    op.drop_column('dialer_queue', 'target_phone')
    op.drop_column('dialer_queue', 'direction')
    op.drop_column('dialer_queue', 'call_id')
    op.create_table('tenants',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('kixie_business_id', sa.VARCHAR(), nullable=False),
    sa.Column('kixie_api_key_enc', sa.VARCHAR(), nullable=False),
    sa.Column('rn_jwt_enc', sa.VARCHAR(), nullable=False),
    sa.Column('webhook_secret', sa.VARCHAR(), nullable=False),
    sa.Column('active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('ix_contact_cache_tenant_id'), table_name='contact_cache')
    op.drop_index(op.f('ix_contact_cache_rn_contact_key'), table_name='contact_cache')
    op.drop_index(op.f('ix_contact_cache_phone_e164'), table_name='contact_cache')
    op.drop_table('contact_cache')
    # ### end Alembic commands ###
